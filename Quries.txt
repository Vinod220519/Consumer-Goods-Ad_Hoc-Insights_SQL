1. Provide the list of markets in which customer "Atliq Exclusive" operates its
business in the APAC region.

Query:
     Select distinct market, sub_zone, channel
      from dim_customer
      where customer = 'Atliq Exclusive' and region = 'APAC'
      order by market, sub_zone, channel;


2. What is the percentage of unique product increase in 2021 vs. 2020? The
final output contains these fields,
		unique_products_2020
		unique_products_2021
		percentage_chg

Query:
     WITH product_counts AS (
    SELECT
        fiscal_year,
        COUNT(DISTINCT product_code) AS unique_products
    FROM fact_sales_monthly
    WHERE fiscal_year IN (2020, 2021)
    GROUP BY fiscal_year
)
SELECT
    MAX(CASE WHEN fiscal_year = 2020 THEN unique_products END) AS unique_products_2020,
    MAX(CASE WHEN fiscal_year = 2021 THEN unique_products END) AS unique_products_2021,
    ROUND(
        (MAX(CASE WHEN fiscal_year = 2021 THEN unique_products END) - 
         MAX(CASE WHEN fiscal_year = 2020 THEN unique_products END)) * 100.0 / 
         MAX(CASE WHEN fiscal_year = 2020 THEN unique_products END), 
        2
    ) AS percentage_chg
FROM product_counts;




3. Provide a report with all the unique product counts for each segment and
sort them in descending order of product counts. The final output contains
2 fields,
            segment
            product_count

Query:
     SELECT
    segment,
    COUNT(DISTINCT product_code) AS product_count
    FROM dim_product
    GROUP BY segment
    ORDER BY product_count DESC;


4. Follow-up: Which segment had the most increase in unique products in
2021 vs 2020? The final output contains these fields,
    segment
    product_count_2020 
    product_count_2021
    difference

Query:
      WITH product_counts AS (
    SELECT
        dp.segment,
        s.fiscal_year,
        COUNT(DISTINCT s.product_code) AS product_count
    FROM fact_sales_monthly s
    JOIN dim_product dp
        ON s.product_code = dp.product_code
    WHERE s.fiscal_year IN (2020, 2021)
    GROUP BY dp.segment, s.fiscal_year
)
SELECT
    segment,
    MAX(CASE WHEN fiscal_year = 2020 THEN product_count ELSE 0 END) AS product_count_2020,
    MAX(CASE WHEN fiscal_year = 2021 THEN product_count ELSE 0 END) AS product_count_2021,
    (MAX(CASE WHEN fiscal_year = 2021 THEN product_count ELSE 0 END) - 
     MAX(CASE WHEN fiscal_year = 2020 THEN product_count ELSE 0 END)) AS difference
FROM product_counts
GROUP BY segment
ORDER BY difference DESC;


5. Get the products that have the highest and lowest manufacturing costs.
   The final output should contain these fields,
   product_code
   product
   manufacturing_cost

Query:
     SELECT
    mc.product_code,
    dp.product,
    mc.manufacturing_cost
FROM fact_manufacturing_cost mc
JOIN dim_product dp
    ON mc.product_code = dp.product_code
WHERE mc.manufacturing_cost = (
    SELECT MAX(manufacturing_cost)
    FROM fact_manufacturing_cost
)
UNION ALL
SELECT
    mc.product_code,
    dp.product,
    mc.manufacturing_cost
FROM fact_manufacturing_cost mc
JOIN dim_product dp
    ON mc.product_code = dp.product_code
WHERE mc.manufacturing_cost = (
    SELECT MIN(manufacturing_cost)
    FROM fact_manufacturing_cost
);


6. Generate a report which contains the top 5 customers who received an
   average high pre_invoice_discount_pct for the fiscal year 2021 and in the
   Indian market. The final output contains these fields,
   customer_code
   customer
   average_discount_percentage

Query:
      SELECT
    dc.customer_code,
    dc.customer,
    ROUND(AVG(pid.pre_invoice_discount_pct) * 100, 2) AS average_discount_percentage
FROM fact_pre_invoice_deductions pid
JOIN dim_customer dc
    ON pid.customer_code = dc.customer_code
WHERE pid.fiscal_year = 2021 AND dc.market = 'India'
GROUP BY dc.customer_code, dc.customer
ORDER BY average_discount_percentage DESC
LIMIT 5;



7. Get the complete report of the Gross sales amount for the customer “Atliq
   Exclusive” for each month. This analysis helps to get an idea of low and
   high-performing months and take strategic decisions.
   The final report contains these columns:
      Month
      Year
      Gross sales Amount

Query:
      SELECT
    MONTHNAME(s.date) AS Month,
    s.fiscal_year AS Year,
    ROUND(SUM(COALESCE(g.gross_price, 0) * s.sold_quantity), 2) AS `Gross sales Amount`
FROM fact_sales_monthly s
JOIN dim_customer dc
    ON s.customer_code = dc.customer_code
LEFT JOIN fact_gross_price g
    ON s.product_code = g.product_code
    AND s.fiscal_year = g.fiscal_year
WHERE dc.customer = 'Atliq Exclusive'
GROUP BY MONTHNAME(s.date), s.fiscal_year, MONTH(s.date)
ORDER BY s.fiscal_year, MONTH(s.date);


8. In which quarter of 2020, got the maximum total_sold_quantity? The final
   output contains these fields sorted by the total_sold_quantity,
   Quarter
   total_sold_quantity

Query:
      WITH quarter_data AS (
    SELECT
        CASE
            WHEN MONTH(date) IN (9, 10, 11) THEN 'Q1'
            WHEN MONTH(date) IN (12,1, 2) THEN 'Q2'
            WHEN MONTH(date) IN (3, 4, 5) THEN 'Q3'
            WHEN MONTH(date) IN (6, 7, 8) THEN 'Q4'
        END AS Quarter,
        sold_quantity
    FROM fact_sales_monthly
    WHERE YEAR(date) = 2020
)
SELECT
    Quarter,
    SUM(sold_quantity) AS total_sold_quantity
FROM quarter_data
WHERE Quarter IS NOT NULL
GROUP BY Quarter
ORDER BY total_sold_quantity DESC;



9. Which channel helped to bring more gross sales in the fiscal year 2021
   and the percentage of contribution? The final output contains these fields,
   channel
   gross_sales_mln
   percentage

Query:
      WITH gross_sales AS (
    SELECT
        dc.channel,
        SUM(g.gross_price * s.sold_quantity) / 1000000 AS gross_sales_mln
    FROM fact_sales_monthly s
    JOIN dim_customer dc
        ON s.customer_code = dc.customer_code
    JOIN fact_gross_price g
        ON s.product_code = g.product_code
        AND s.fiscal_year = g.fiscal_year
    WHERE s.fiscal_year = 2021
    GROUP BY dc.channel
)
SELECT
    channel,
    ROUND(gross_sales_mln, 2) AS gross_sales_mln,
    ROUND(
        (gross_sales_mln / SUM(gross_sales_mln) OVER ()) * 100,
        2
    ) AS percentage
FROM gross_sales
ORDER BY gross_sales_mln DESC;




10. Get the Top 3 products in each division that have a high
    total_sold_quantity in the fiscal_year 2021? The final output contains these
    fields,
     division
     product_code
     product
     total_sold_quantity
     rank_order

Query:
     WITH product_sales AS (
    SELECT
        dp.division,
        s.product_code,
        dp.product,
        SUM(s.sold_quantity) AS total_sold_quantity
    FROM fact_sales_monthly s
    JOIN dim_product dp
        ON s.product_code = dp.product_code
    WHERE s.fiscal_year = 2021
    GROUP BY dp.division, s.product_code, dp.product
),
ranked_products AS (
    SELECT
        division,
        product_code,
        product,
        total_sold_quantity,
        RANK() OVER (PARTITION BY division ORDER BY total_sold_quantity DESC) AS rank_order
    FROM product_sales
)
SELECT
    division,
    product_code,
    product,
    total_sold_quantity,
    rank_order
FROM ranked_products
WHERE rank_order <= 3
ORDER BY division, rank_order;


      